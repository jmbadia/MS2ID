% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MS2ID.R, R/createMS2ID.R
\name{MS2ID}
\alias{MS2ID}
\alias{MS2ID-class}
\alias{show,MS2ID-method}
\alias{createMS2ID}
\title{MS2ID class for high-throughput MS/MS annotation}
\usage{
MS2ID(ms2idFolder)

\S4method{show}{MS2ID}(object)

createMS2ID(
  name = "MS2ID",
  path = ".",
  cmpdb,
  noiseThresh = 0.01,
  calcSplash = TRUE,
  calcMmi = TRUE,
  overwrite = FALSE,
  removeRedundant = "compounds"
)
}
\arguments{
\item{ms2idFolder}{character(1) with the directory's path of the MS2ID
backend}

\item{object}{character: signature supported}

\item{name}{character(1) name of the directory where the files will be saved.}

\item{path}{character(1) with the path where to create the MS2ID backend.}

\item{cmpdb}{\code{\link[CompDb-class]{CompDb}}(1) object (with MS/MS
spectra).}

\item{noiseThresh}{A numeric defining the threshold used in the noise
filtering of the MS/MS spectra. e.g. noiseThresh = 0.01 removes peaks with
an intensity less than 1\% of the base peak.}

\item{calcSplash}{boolean(1) indicating if SPLASH values (when missing) must
be calculated using the \code{\link[splashR]{getSplash}} function.}

\item{calcMmi}{boolean(1) indicating if compound monoisotopic mass values
(when missing) must be calculated using the
\code{\link[enviPat]{check_chemform}} function.}

\item{overwrite}{boolean(1) indicating if the function can overwrite
results.}

\item{removeRedundant}{character(1) eliminate redundant compounds and/or
spectra. Expected options: "compounds", "spectra", "both" or "none".
Redundant compounds are removed by comparing their InChIKeys. Redundant
spectra are removed by comparing the spectrum and specific metadata
variables, which include: "collisionEnergy", "polarity", "predicted",
"instrumentType", and "precursorMz". If the metadata is incomplete or lacks
the necessary fields, redundant spectra will not be removed.}
}
\value{
\code{createMS2ID} returns a character(1) with the MS2ID backend
  location. This value must be used as \code{ms2idFolder} parameter in the
  \code{MS2ID} constructor.
}
\description{
The `MS2ID` class encapsulates, a MS2 spectra database along with its
metadata. Its internal structure allows to annotate query spectra - with the
\code{\link{annotate}} function - using big spectra databases at high speed
and low RAM requirements (typically 100 query spectra/min against a 1M5
spectra library). MS2ID class uses a SQLite database with the metadata and
bigmemory files to store the spectra (i.e. peaks matrices) and their
mass-charge index. See
\href{https://jmbadia.github.io/MS2ID/articles/MS2ID.html}{vignette}.

\code{createMS2ID} processes the data contained in a
\code{\link[CompDb-class]{CompDb}} object \insertCite{CompoundDB}{MS2ID} and
creates a MS2ID backend by saving data as SQL and bigMemory files in a
directory. Later on, that directory will be load as an \linkS4class{MS2ID}
object in order to be used repeatedly as reference library with the
\code{\link{annotate}} function.
}
\details{
The \code{createMS2ID} function creates a MS2ID backend that is
 subsequently used by the \code{MS2ID} constructor, which creates the
 \code{MS2ID} object.
}
\section{General functions}{
 \itemize{  \item createMS2ID(): Function to create
 MS2ID backends. \item MS2ID(): Constructor function for MS2ID objects.}
}

\examples{
## OBTAIN MS2ID LIBRARY ---
## Decompress the MoNA subset that comes with MS2ID
MoNAsubset <- system.file("extdata/MoNAsubset.sdf.gz",
                          package = "MS2ID")
## Use CompoundDB to parse MoNA
library(CompoundDb)
cmps <- suppressWarnings(compound_tbl_sdf(MoNAsubset))
spctr <- msms_spectra_mona(MoNAsubset, collapsed = TRUE)
spctr$predicted <- FALSE
metad <- data.frame(
    name = c("source", "url",
             "source_version","source_date"),
    value = c("MoNA",
              "https://mona.fiehnlab.ucdavis.edu/downloads",
              "v1", '07-09')
)
cmpdbDir <- file.path(tempdir(), "cmpdbDir")
if(dir.exists(cmpdbDir)){
    do.call(file.remove,
            list(list.files(cmpdbDir, full.names = TRUE)))
}else{
    dir.create(cmpdbDir)
}
db_file <- createCompDb(cmps, metadata = metad,
                        msms_spectra = spctr,
                        path = cmpdbDir)
cmpdb <- CompDb(db_file)
## Create the MS2ID backend
library(MS2ID)
MS2IDdirectory <- createMS2ID(cmpdb = cmpdb, calcSplash = FALSE,
                              overwrite = TRUE, path = tempdir())
## Obtain the MS2ID object
MS2IDlib <- MS2ID(MS2IDdirectory)

}
\references{
\insertRef{CompoundDB}{MS2ID}
}
\seealso{
\code{\link{createMS2ID}} function.

\linkS4class{MS2ID} class.
}
\author{
Josep M. Badia \email{josepmaria.badia@urv.cat}
}
